\documentclass[11pt, oneside, a4paper]{article}

\usepackage[utf8]{inputenc}
\usepackage[sectionbib, round]{natbib}
\usepackage[textwidth = 17cm, top = 2cm, bottom = 2cm]{geometry}
\usepackage{nameref}
\usepackage{bm}
\usepackage{amsmath, amssymb, amsfonts}
\usepackage{graphicx}
\usepackage{hyperref}

\newcommand{\pkg}[1]{\texorpdfstring%
{{\normalfont\fontseries{b}\selectfont #1}}%
{#1}}

\begin{document}
\SweaveOpts{engine = R}
%\VignetteIndexEntry{rebmix: The Rebmix Package}
%\VignetteKeyword{continuous variable}
%\VignetteKeyword{discrete variable}
%\VignetteKeyword{finite mixture}
%\VignetteKeyword{parameter estimation}
%\VignetteKeyword{REBMIX algorithm}
%\VignettePackage{rebmix}
\bibliographystyle{abbrvnat}
\title{\pkg{rebmix}: The Rebmix Package}
\author{Marko Nagode}
\date{\today}
\maketitle
\begin{abstract}
The \pkg{rebmix} package for fitting finite mixture models implemented in R package \pkg{rebmix} is presented. It provides functions for random univariate and multivariate finite mixture generation, the number of components, component weights and component parameter estimation, bootstrapping and the plotting of finite mixtures. It requires preprocessing of observations, information criterion and conditionally independent normal, lognormal, Weibull, gamma, binomial, Poisson or Dirac component densities. The algorithm optimizes the component parameters, mixing weights and number of components successively based on boundary conditions, such as the maximum number of components and number of bins or nearest neighbours. The algorithm is robust, time efficient and can be used either to assess an initial set of unknown parameters and number of components, e.g., for the EM algorithm, or as a standalone algorithm providing a good compromise between parametric and nonparametric methods of finite mixture estimation.
\end{abstract}
\section{Introduction}\label{sec:introduction}
To cite the REBMIX algorithm please refer to \citep{Nagode_Fajdiga_2011a, Nagode_Fajdiga_2011b, Nagode_2015}. For theoretical backgrounds please upload \url{http://doi.org/10.5963/JAO0302001}.
\section{Examples}\label{sec:examples}
To illustrate the use of the REBMIX algorithm, univariate and multivariate datasets are considered. The \pkg{rebmix} is loaded and the prompt before starting new page is set to \texttt{TRUE}.
<<rebmix-code, split = FALSE, echo = FALSE, keep.source = FALSE>>=
##############################################
## R sources for reproducing the results in ##
##   Marko Nagode:                          ##
##   rebmix: The Rebmix Package             ##
##############################################

options(prompt = "R> ", continue = "+  ", width = 80,
  useFancyQuotes = FALSE, digits = 3)
@
<<rebmix-code, split = FALSE, keep.source = FALSE>>=
###################
## Preliminaries ##
###################

## load package and set prompt before starting new page to TRUE.

library("rebmix")
devAskNewPage(ask = TRUE)
@
\subsection{Gamma datasets}\label{subsec:gamma_datasets}
Three gamma mixtures are considered \citep{Wiper_2001}. The first has four well-separated components with means $2$, $4$, $6$ and $8$, respectively
\begin{center}
\(\begin{array}{lll}
\theta_{1} = 1/100 & \beta_{1} = 200 & n_{1} = 100 \\
\theta_{2} = 1/100 & \beta_{2} = 400 & n_{2} = 100 \\
\theta_{3} = 1/100 & \beta_{3} = 600 & n_{3} = 100 \\
\theta_{4} = 1/100 & \beta_{4} = 800 & n_{4} = 100.
\end{array}\)
\end{center}
The second has equal means but different variances and weights
\begin{center}
\(\begin{array}{lll}
\theta_{1} = 1/27 & \beta_{1} = 9 & n_{1} = 40 \\
\theta_{2} = 1/270 & \beta_{2} = 90 & n_{2} = 360.
\end{array}\)
\end{center}
The third is a mixture of a rather diffuse component with mean $6$ and two lower weighted components with smaller variances and means of $2$ and $10$, respectively
\begin{center}
\(\begin{array}{lll}
\theta_{1} = 1/20 & \beta_{1} = 40 & n_{1} = 80 \\
\theta_{2} = 1 & \beta_{2} = 6 & n_{2} = 240 \\
\theta_{3} = 1/20 & \beta_{3} = 200 & n_{3} = 80.
\end{array}\)
\end{center}
The gamma mixtures are generated by calling the \texttt{RNGMIX} function. It demands character vector \texttt{Dataset} containing list names of data frames that datasets are written in, random seed \texttt{rseed}, vector \texttt{n} containing number of observations in classes $n_{l}$ and a matrix containing $c$ parametric family types \texttt{pdfi}. One of \texttt{"normal"}, \texttt{"lognormal"}, \texttt{"Weibull"}, \texttt{"gamma"}, \texttt{"binomial"}, \texttt{"Poisson"} or \texttt{"Dirac"}. Component parameters \texttt{theta1.i} follow the parametric family types. One of $\mu_{il}$ for normal and lognormal distributions and $\theta_{il}$ for Weibull, gamma, binomial, Poisson and Dirac distributions. Component parameters \texttt{theta2.i} follow \texttt{theta1.i}. One of $\sigma_{il}$ for normal and lognormal distributions, $\beta_{il}$ for Weibull and gamma distributions and $p_{il}$ for binomial distribution.
<<rebmix-code, split = FALSE, results = hide, keep.source = FALSE>>=
######################
##  Gamma datasets  ##
######################

## Generate gamma datasets.

n <- c(100, 100, 100, 100)

Theta <- list(pdf1 = "gamma",
  theta1.1 = c(1/100, 1/100, 1/100, 1/100),
  theta2.1 = c(200, 400, 600, 800))

gamma1 <- RNGMIX(Dataset = "gamma1", n = n, Theta = Theta)

n <- c(40, 360)

Theta <- list(pdf1 = "gamma",
  theta1.1 = c(1/27, 1/270),
  theta2.1 = c(9, 90))

gamma2 <- RNGMIX(Dataset = "gamma2", n = n, Theta = Theta)

n <- c(80, 240, 80)

Theta <- list(pdf1 = "gamma",
  theta1.1 = c(1/20, 1, 1/20),
  theta2.1 = c(40, 6, 200))

gamma3 <- RNGMIX(Dataset = "gamma3", n = n, Theta = Theta)
@
The \texttt{gamma1\$Dataset}, \texttt{gamma2\$Dataset} and \texttt{gamma3\$Dataset} hold a list of data frames of size $n \times d$. See \texttt{help("RNGMIX")} in \pkg{rebmix} for details. The preprocessing is set to histogram, maximum number of components to $8$ and information criterion to AIC or BIC. The number of classes ranges from $30$ to $80$ and function \texttt{REBMIX} is called for the gamma parametric family type.
<<rebmix-code, split = FALSE, results = hide, keep.source = FALSE>>=
## Estimate number of components, component weights and component parameters.

gamma1est <- REBMIX(Dataset = gamma1$Dataset,
  Preprocessing = "histogram",
  cmax = 8,
  Criterion = c("AIC", "BIC"),
  Variables = "continuous",
  pdf = "gamma",
  K = 30:80)

gamma2est <- REBMIX(Dataset = gamma2$Dataset,
  Preprocessing = "histogram",
  cmax = 8,
  Criterion = "BIC",
  Variables = "continuous",
  pdf = "gamma",
  K = 30:80)

gamma3est <- REBMIX(Dataset = gamma3$Dataset,
  Preprocessing = "histogram",
  cmax = 8,
  Criterion = "BIC",
  Variables = "continuous",
  pdf = "gamma",
  K = 30:80)
@
See \texttt{help("REBMIX")} in \pkg{rebmix} for details about specifying arguments for the function returning an object of class \texttt{REBMIX}. List of data frames \texttt{w} contains component weights $w_{l}$ summing to $1$, \texttt{Theta} stands for a list of data frames containing parametric family types \texttt{pdfi}. One of \texttt{"normal"}, \texttt{"lognormal"}, \texttt{"Weibull"}, \texttt{"gamma"}, \texttt{"binomial"}, \texttt{"Poisson"} or \texttt{"Dirac"}. Component parameters \texttt{theta1.i} follow the parametric family types. One of $\mu_{il}$ for normal and lognormal distributions and $\theta_{il}$ for Weibull, gamma, binomial, Poisson and Dirac distributions. Component parameters \texttt{theta2.i} follow \texttt{theta1.i}. One of $\sigma_{il}$ for normal and lognormal distributions, $\beta_{il}$ for Weibull and gamma distributions and $p_{il}$ for binomial distribution. Character vector \texttt{Variables} contains types of variables. One of \texttt{"continuous"} or \texttt{"discrete"}.

In the \texttt{summary} data frame additional information about dataset, preprocessing, $D$, $c_{\mathrm{max}}$, information criterion type, $a_{\mathrm{r}}$, restraints type, optimal $c$, optimal $k$, $\bar{y}_{i0}$, optimal $h_{i}$, information criterion $\mathrm{IC}$ and log likelihood $\operatorname{log} L$ is stored. Position \texttt{pos} in the \texttt{summary} data frame at which log likelihood $\mathrm{log}\, L$ attains its maximum is available, too. See \texttt{help("summary.REBMIX")} for details.
<<rebmix-code, split = FALSE, keep.source = FALSE>>=
summary(gamma1est)
@
The \texttt{plot} method delivers fitted finite mixture with the legend in Figure~\ref{figure:gamma2}.
\begin{figure}[htbp]\centering
<<gamma2-fig, fig = TRUE, pdf = TRUE, png = FALSE, eps = FALSE, height = 2.5, width = 5.5, echo = TRUE, results = hide, keep.source = FALSE>>=
plot(gamma2est, pos = 1, what = c("den", "dis"), ncol = 2, npts = 1000)
@
\caption{Gamma 2 dataset. Empirical density (circles) and predictive gamma mixture density in black solid line.}\label{figure:gamma2}
\end{figure}
The corresponding predictive gamma mixture parameters are given by the \texttt{coef} method.
<<rebmix-code, split = FALSE, keep.source = FALSE>>=
coef(gamma2est)
@
For the details about specifying arguments for the \texttt{plot} and \texttt{coef} methods see \texttt{help("plot.REBMIX")} and \texttt{help("coef.REBMIX")}, respectively.

By calling the \texttt{boot.REBMIX} method \texttt{B} bootstrap datasets of length \texttt{n} are generated for the \texttt{x} object of class \texttt{REBMIX} at position \texttt{pos}, where bootstrap \texttt{Bootstrap} can be one of default \texttt{"parametric"} or \texttt{"nonparametric"}. Arguments \texttt{replace} and \texttt{prob} affect the nonparametric bootstrap only, see \texttt{help("sample")} and \cite{McLachlan_and_Peel_1997} for details about replacement and weighted bootstrap.
<<rebmix-code, split = FALSE, results = hide, keep.source = FALSE>>=
## Bootstrap finite mixture.
gamma3boot <- boot.REBMIX(x = gamma3est, pos = 1, Bootstrap = "p", B = 10, n = NULL, replace = TRUE, prob = NULL)
@
<<rebmix-code, split = FALSE, keep.source = FALSE>>=
gamma3boot
@
The \texttt{gamma3boot} object of class \texttt{boot.REBMIX} holds a data frame \texttt{c} containing numbers $c$ of components for $B$ bootstrap datasets, standard error \texttt{c.se}, coefficient of variation \texttt{c.cv}, mode \texttt{c.mode} and mode probability \texttt{c.prob} of the numbers of components. Component weights \texttt{w}, component parameters \texttt{theta1.i} and \texttt{theta2.i}, standard errors \texttt{w.se}, \texttt{theta1.i.se} and \texttt{theta2.i.se} and coefficients of variation \texttt{w.cv}, \texttt{theta1.i.cv} and \texttt{theta2.i.cv} for those bootstrap datasets for which $c$ equals mode $c_{\mathrm{m}}$ are returned, too. See \texttt{help("boot.REBMIX")} in \pkg{rebmix} for details.
<<rebmix-code, split = FALSE, keep.source = FALSE>>=
summary(gamma3boot)
@
\subsection{Poisson dataset}\label{subsec:poisson_dataset}
Dataset consists of $n = 600$ two~dimensional observations obtained by generating data points separately from each of three Poisson distributions. The component~dataset sizes and parameters, which are those studied in \citet{Jinwen_2009}, are displayed below
\begin{center}
\(\begin{array}{ll}
\bm{\theta}_{1} = (3, 2)^{\top} & n_{1} = 200 \\
\bm{\theta}_{2} = (9, 10)^{\top} & n_{2} = 200 \\
\bm{\theta}_{3} = (15, 16)^{\top} & n_{3} = 200
\end{array}\)
\end{center}
For the dataset \citet{Jinwen_2009} conduct $100$ experiments by selecting different initial values of the mixing proportions. In all the cases, the adaptive gradient BYY learning algorithm leads to the correct model selection, i.e., finally allocating the correct number of Poissons for the dataset. In the meantime, it also results in an estimate for each parameter in the original or true Poisson mixture which
generated the dataset. As the dataset of \citet{Jinwen_2009} can not exactly be reproduced, $100$ datasets are generated with random seeds $r_{\mathrm{seed}}$ ranging from $-1$ to $-100$.
<<rebmix-code, split = FALSE, results = hide, keep.source = FALSE>>=
#########################
##   Poisson dataset   ##
#########################

## Generate the Poisson dataset.

n <- c(200, 200, 200)

Theta <- list(rep("Poisson", 3), c(3, 9, 15), rep("Poisson", 3), c(2, 10, 16))

poisson <- RNGMIX(Dataset = paste("Poisson_", 1:100, sep = ""), n = n, Theta = Theta)
@
In total, $100$ finite mixture estimations are performed by calling the \texttt{REBMIX} function.
<<rebmix-code, split = FALSE, results = hide, keep.source = FALSE>>=
## Estimate number of components, component weights and component parameters.

poissonest <- REBMIX(Dataset = poisson$Dataset,
  Preprocessing = "histogram",
  cmax = 6,
  Criterion = "MDL5",
  Variables = rep("discrete", 2),
  pdf = rep("Poisson", 2),
  K = 1)

c <- as.numeric(poissonest$summary$c)
IC <- as.numeric(poissonest$summary$IC)
@
The results are as follows:
<<rebmix-code, split = FALSE, keep.source = FALSE>>=
## Visualize results.

summary(c)
summary(IC, digits = 5)
@
The \texttt{REBMIX} function predicts $\Sexpr{format(mean(c), digits = 3)}$ components on average, where probability of identifying exactly $c = 3$ components equals $\Sexpr{format(length(c[c == 3]) / length(c), digits = 3)}$. To plot the mixture in Figure~\ref{figure:poisson} the \texttt{plot} method is called.
\begin{figure}[htbp]\centering
<<poisson-fig, fig = TRUE, pdf = TRUE, png = FALSE, eps = FALSE, height = 5.0, width = 5.5, echo = TRUE, results = hide, keep.source = FALSE>>=
plot(poissonest, pos = 58, what = c("dens", "marg", "IC", "D", "logL"), nrow = 2, ncol = 3, npts = 1000)
@
\caption{Poisson dataset. Empirical densities (coloured large circles), predictive multivariate Poisson-Poisson mixture density (coloured small circles), empirical densities (circles), predictive univariate marginal Poisson mixture densities and progress charts (solid line).}\label{figure:poisson}
\end{figure}
<<rebmix-code, split = FALSE, echo = FALSE, results = hide, keep.source = FALSE>>=
rm(list = ls())
@
\section{Summary}\label{sec:summary}
The \texttt{RCLSMIX} function that enables class membership prediction is available in the \pkg{rebmix} package. See \texttt{help("RCLSMIX")} for details. The REBMIX is thus also intended to be used for pattern recognition.
\bibliography{rebmix}
\vspace{\baselineskip}\noindent\emph{Marko Nagode\\
University of Ljubljana\\
Faculty of Mechanical Engineering\\
A\v{s}ker\v{c}eva 6\\
1000 Ljubljana\\
Slovenia}\\
\href{mailto:Marko.Nagode@fs.uni-lj.si}{Marko.Nagode@fs.uni-lj.si}.
\end{document}
